{"version":3,"sources":["../../src/reducer.js"],"names":[],"mappings":";;;;;kBAGwB;;;;;;IAFZ;;;;AACZ,IAAI,SAAS,IAAI,QAAQ,MAAR,EAAb;AACW,SAAS,OAAT,CAAiB,KAAjB,EAAwB,MAAxB,EAAgC;AAC3C,WAAO,IAAP,CAAY,4BAAZ,EAD2C;AAE3C,QAAI,qBAAJ,CAF2C;AAG3C,YAAQ,OAAO,KAAP;AACJ,aAAK,aAAL;AACI,mBAAO,IAAP,CAAY,2BAAZ,EADJ;AAEI,wBAAY,sBAAW,KAAX,EAAkB,OAAlB,CAAZ,CAFJ;AAGI,mBAAO,IAAP,CAAY,eAAZ,EAA6B,UAAU,QAAV,EAA7B,EAHJ;AAII,kBAJJ;;AADJ,aAOS,MAAL;AACI,mBAAO,GAAP,CAAW,oBAAX,EADJ;AAEI,kBAFJ;;AAPJ,aAWS,MAAL;AACI,mBAAO,GAAP,CAAW,oBAAX,EADJ;AAEI,kBAFJ;;AAXJ;AAgBQ,mBAAO,GAAP,CAAW,+CAAX,EADJ;AAEI,kBAFJ;AAfJ,KAH2C;AAsB3C,WAAO,SAAP,CAtB2C;CAAhC","file":"reducer.js","sourcesContent":["import {next, vote, setEntries} from './core'\nimport * as winston from 'winston'\nlet logger = new winston.Logger();\nexport default function reducer(state, action) {\n    logger.info('reacher inside the reducer')\n    let nextState\n    switch (action._type) {\n        case 'SET_ENTRIES':\n            logger.info('action type > SET_ENTRIES')\n            nextState = setEntries(state, entries)\n            logger.info('next state > ', nextState.toString())\n            break;\n\n        case 'NEXT':\n            logger.log('action type > NEXT')\n            break;\n\n        case 'VOTE':\n            logger.log('action type > VOTE')\n            break;\n\n        default:\n            logger.log('no action found going into the default action')\n            break;\n    }\n    return nextState\n}"]}