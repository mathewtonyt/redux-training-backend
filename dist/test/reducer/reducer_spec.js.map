{"version":3,"sources":["../../../test/reducer/reducer_spec.js"],"names":[],"mappings":";;;;;;;;;;;;AAEA,IAAI,OAAO,QAAQ,cAAR,CAAP;;;;;AAKJ,SAAS,SAAT,EAAoB,YAAM;;AAEtB,OAAG,qBAAH,EAA0B,YAAM;AAC5B,YAAM,eAAe,qBAAf,CADsB;AAE5B,YAAM,SAAS,EAAE,MAAM,aAAN,EAAqB,SAAS,CAAC,eAAD,CAAT,EAAhC,CAFsB;AAG5B,aAAK,GAAL,CAAS,0BAAT,EAH4B;AAI5B,YAAI,YAAY,uBAAQ,YAAR,EAAsB,MAAtB,CAAZ,CAJwB;AAK5B,aAAK,GAAL,CAAS,eAAT,EAA0B,UAAU,QAAV,EAA1B,EAL4B;AAM5B,YAAI,iBAAiB,uBAAO;AACxB,qBAAS,uBAAO,CAAC,eAAD,CAAP,CAAT;SADiB,CAAjB,CANwB;AAS5B,aAAK,GAAL,CAAS,yBAAT,EAAoC,eAAe,QAAf,EAApC,EAT4B;AAU5B,0BAAO,UAAU,MAAV,CAAiB,cAAjB,CAAP,EAAyC,EAAzC,CAA4C,KAA5C,CAAkD,IAAlD,EAV4B;KAAN,CAA1B,CAFsB;;AAetB,OAAG,cAAH,EAAmB,YAAM;AACrB,YAAM,eAAe,uBAAO;AACxB,qBAAS,CAAC,eAAD,EAAkB,eAAlB,CAAT;SADiB,CAAf,CADe;AAIrB,YAAM,SAAS,EAAE,MAAM,MAAN,EAAX,CAJe;AAKrB,YAAM,YAAY,uBAAQ,YAAR,EAAsB,MAAtB,CAAZ,CALe;AAMrB,YAAM,iBAAiB,uBAAO;AAC1B,kBAAM;AACF,sBAAM,CAAC,eAAD,EAAkB,eAAlB,CAAN;aADJ;AAGA,qBAAS,EAAT;SAJmB,CAAjB,CANe;AAYrB,aAAK,GAAL,CAAS,eAAT,EAA0B,UAAU,QAAV,EAA1B,EAZqB;AAarB,aAAK,GAAL,CAAS,oBAAT,EAA+B,eAAe,QAAf,EAA/B,EAbqB;AAcrB,0BAAO,UAAU,MAAV,CAAiB,cAAjB,CAAP,EAAyC,EAAzC,CAA4C,KAA5C,CAAkD,IAAlD,EAdqB;KAAN,CAAnB,CAfsB;;AAgCtB,OAAG,cAAH,EAAmB,YAAM;AACrB,YAAM,eAAe,uBAAO;AACxB,kBAAM;AACF,sBAAM,CAAC,eAAD,EAAkB,eAAlB,CAAN;aADJ;AAGA,qBAAS,EAAT;SAJiB,CAAf,CADe;AAOrB,YAAM,SAAS,EAAE,MAAM,MAAN,EAAc,OAAO,eAAP,EAAzB,CAPe;AAQrB,aAAK,GAAL,CAAS,gBAAT,EARqB;AASrB,YAAM,YAAY,uBAAQ,YAAR,EAAsB,MAAtB,CAAZ,CATe;AAUrB,YAAM,iBAAiB,uBAAO;AAC1B,kBAAM;AACF,sBAAM,CAAC,eAAD,EAAkB,eAAlB,CAAN;AACA,uBAAO,EAAE,eAAe,CAAf,EAAT;aAFJ;AAIA,qBAAS,EAAT;SALmB,CAAjB,CAVe;AAiBrB,aAAK,GAAL,CAAS,eAAT,EAA0B,UAAU,QAAV,EAA1B,EAjBqB;AAkBrB,aAAK,GAAL,CAAS,oBAAT,EAA+B,eAAe,QAAf,EAA/B,EAlBqB;AAmBrB,0BAAO,UAAU,MAAV,CAAiB,cAAjB,CAAP,EAAyC,EAAzC,CAA4C,KAA5C,CAAkD,IAAlD,EAnBqB;KAAN,CAAnB,CAhCsB;;AAsDtB,OAAG,sBAAH,EAA2B,YAAM;AAC7B,YAAM,SAAS,EAAE,MAAM,aAAN,EAAqB,SAAS,CAAC,eAAD,CAAT,EAAhC,CADuB;AAE7B,YAAM,YAAY,uBAAQ,SAAR,EAAmB,MAAnB,CAAZ,CAFuB;AAG7B,0BAAO,UAAU,MAAV,CAAiB,uBAAO;AAC3B,qBAAS,CAAC,eAAD,CAAT;SADoB,CAAjB,CAAP,EAEK,EAFL,CAEQ,KAFR,CAEc,IAFd,EAH6B;KAAN,CAA3B,CAtDsB;;AA8DtB,OAAG,yBAAH,EAA8B,YAAM;AAChC,YAAM,UAAU,CACZ,EAAE,MAAM,aAAN,EAAqB,SAAS,CAAC,eAAD,EAAkB,eAAlB,CAAT,EADX,EAEZ,EAAE,MAAM,MAAN,EAFU,EAGZ,EAAE,MAAM,MAAN,EAAc,OAAO,eAAP,EAHJ,EAIZ,EAAE,MAAM,MAAN,EAAc,OAAO,eAAP,EAJJ,EAKZ,EAAE,MAAM,MAAN,EAAc,OAAO,eAAP,EALJ,EAMZ,EAAE,MAAM,MAAN,EANU,CAAV,CAD0B;AAShC,YAAM,aAAa,QAAQ,MAAR,oBAAwB,qBAAxB,CAAb,CAT0B;;AAWhC,0BAAO,WAAW,MAAX,CAAkB,uBAAO;AAC5B,oBAAQ,eAAR;SADqB,CAAlB,CAAP,EAEK,EAFL,CAEQ,KAFR,CAEc,IAFd,EAXgC;KAAN,CAA9B,CA9DsB;CAAN,CAApB","file":"reducer_spec.js","sourcesContent":["import {Map, fromJS, List} from 'immutable'\nimport {expect} from 'chai'\nlet mlog = require('mocha-logger')\nimport reducer from '../../src/reducer'\n\n// mlog.log('reducer object is > ', reducer)\n\ndescribe('reducer', () => {\n\n    it('handles SET_ENTRIES', () => {\n        const initialState = Map();\n        const action = { type: 'SET_ENTRIES', entries: ['Trainspotting'] };\n        mlog.log('reacher here in the test')\n        let nextState = reducer(initialState, action);\n        mlog.log('next state > ', nextState.toString())\n        let expectedResult = fromJS({\n            entries: fromJS(['Trainspotting'])\n        });\n        mlog.log('expectedResult state > ', expectedResult.toString())\n        expect(nextState.equals(expectedResult)).to.equal(true);\n    });\n\n    it('handles NEXT', () => {\n        const initialState = fromJS({\n            entries: ['Trainspotting', '28 Days Later']\n        });\n        const action = { type: 'NEXT' };\n        const nextState = reducer(initialState, action);\n        const expectedResult = fromJS({\n            vote: {\n                pair: ['Trainspotting', '28 Days Later']\n            },\n            entries: []\n        })\n        mlog.log('next state > ', nextState.toString())\n        mlog.log('expected result =>', expectedResult.toString())\n        expect(nextState.equals(expectedResult)).to.equal(true);\n    });\n\n    it('handles VOTE', () => {\n        const initialState = fromJS({\n            vote: {\n                pair: ['Trainspotting', '28 Days Later']\n            },\n            entries: []\n        });\n        const action = { type: 'VOTE', entry: 'Trainspotting' }\n        mlog.log('reached here k')\n        const nextState = reducer(initialState, action)\n        const expectedResult = fromJS({\n            vote: {\n                pair: ['Trainspotting', '28 Days Later'],\n                tally: { Trainspotting: 1 }\n            },\n            entries: []\n        })\n        mlog.log('next state > ', nextState.toString())\n        mlog.log('expected result =>', expectedResult.toString())\n        expect(nextState.equals(expectedResult)).to.equal(true);\n    });\n\n    it('has an initial state', () => {\n        const action = { type: 'SET_ENTRIES', entries: ['Trainspotting'] };\n        const nextState = reducer(undefined, action);\n        expect(nextState.equals(fromJS({\n            entries: ['Trainspotting']\n        }))).to.equal(true);\n    });\n\n    it('can be used with reduce', () => {\n        const actions = [\n            { type: 'SET_ENTRIES', entries: ['Trainspotting', '28 Days Later'] },\n            { type: 'NEXT' },\n            { type: 'VOTE', entry: 'Trainspotting' },\n            { type: 'VOTE', entry: '28 Days Later' },\n            { type: 'VOTE', entry: 'Trainspotting' },\n            { type: 'NEXT' }\n        ];\n        const finalState = actions.reduce(reducer, Map());\n\n        expect(finalState.equals(fromJS({\n            winner: 'Trainspotting'\n        }))).to.equal(true);\n    });\n\n});"]}